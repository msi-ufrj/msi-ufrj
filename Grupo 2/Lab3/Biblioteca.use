model Biblioteca

enum CategoriaLeitor {aluno, professor}

class Leitor
attributes
	numRegistro: Integer
	nome: String
	categoria: CategoriaLeitor
	cartaoId: Integer
	inscricao: Boolean
operations
	obterEmprestimo(livro : Livro, dataEmprestimo: Integer)
	obterReserva(livro: Livro, dataReserva: Integer)
end

class Livro
attributes
	codigoISBN: Integer
	titulo: String
	editora: String
	anoDeImpressao: Integer
operations 
	exemplaresDisponiveis(): Integer = self.exemplar->size() - self.exemplar->collect(leitor)->asSet()->select(isDefined())->size()
end

class Autor
attributes
	nome: String
end

class Exemplar
attributes
	id: Integer
end

association AutorLivro between
	Livro[*] role escrito
	Autor[1..*] role escreve
end

association LivroExemplar between
	Livro [1] role livro
	Exemplar [*] role exemplar
end

associationclass Reserva between 
	Livro[*] role livro
	Leitor[*] role leitor
attributes
	dataReserva: Integer
end

associationclass Emprestimo between 
	Exemplar[*] role exemplar
	Leitor[0..1] role leitor
attributes
	dataEmprestimo: Integer
	dataDevolucao: Integer
end

constraints

context Leitor::obterEmprestimo(livro: Livro, dataEmprestimo: Integer)
pre:
	if self.categoria = CategoriaLeitor::aluno
	then
		self.exemplar->size() <= 3
	else
		self.exemplar->size() <= 5
	endif
pre:
	livro.exemplaresDisponiveis() > 0

context Leitor::obterReserva(livro: Livro, dataReserva: Integer)
pre:
	livro.exemplaresDisponiveis() = 0
pre:
	livro.exemplar->size() > 0
